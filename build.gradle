buildscript {
    dependencies {
        classpath("org.flywaydb:flyway-gradle-plugin:9.16.0")
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.2-SNAPSHOT'
    id 'io.spring.dependency-management' version '1.1.0'
    id "org.flywaydb.flyway" version "9.8.1"
}

group = 'com.springboot.blog'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
    implementation 'org.modelmapper:modelmapper:2.4.5'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
    implementation 'org.flywaydb:flyway-core'

//    runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc'
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'junit:junit:4.12'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Add these START
bootJar {
    archiveClassifier.set('boot')
}

jar {
    archiveClassifier.set('')
}
// Add these END

flyway {
    driver = 'org.postgresql.Driver'
    url = 'jdbc:postgresql://localhost:5432/BlogPostgres'
    user = 'postgres'
    password = '110401'
    cleanDisabled = false
}
